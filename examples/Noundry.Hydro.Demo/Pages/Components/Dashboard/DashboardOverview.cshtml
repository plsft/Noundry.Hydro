@model DashboardOverview

<div class="space-y-6">
    <!-- Header Section -->
    <div class="flex flex-col md:flex-row md:items-center md:justify-between">
        <div>
            <h1 class="text-3xl font-bold text-gray-900">Dashboard</h1>
            <p class="mt-1 text-sm text-gray-500">
                Welcome back! Here's what's happening with your business today.
            </p>
        </div>
        
        <div class="mt-4 md:mt-0 flex items-center space-x-3">
            <!-- Time Range Selector -->
            <select bind="@Model.SelectedTimeRange" 
                    on:change="@(() => Model.ChangeTimeRange(Model.SelectedTimeRange))"
                    class="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md">
                <option value="7">Last 7 days</option>
                <option value="30">Last 30 days</option>
                <option value="90">Last 90 days</option>
                <option value="365">Last year</option>
            </select>

            <!-- Action Buttons -->
            <button on:click="@(() => Model.RefreshAll())" 
                    class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                    disabled="@Model.IsLoading">
                @if (Model.IsLoading)
                {
                    @Model.LoadingSpinner("sm")
                }
                else
                {
                    <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                    </svg>
                }
                Refresh
            </button>

            <button on:click="@(() => Model.ExportData("dashboard"))" 
                    class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
                Export
            </button>
        </div>
    </div>

    <!-- Stats Cards Section -->
    <stats-cards />

    <!-- Charts and Analytics Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <!-- Revenue Chart -->
        <div class="bg-white shadow rounded-lg p-6">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-medium text-gray-900">Revenue Trend</h3>
                <div class="flex items-center text-sm text-gray-500">
                    <svg class="h-4 w-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                    </svg>
                    Last @Model.SelectedTimeRange days
                </div>
            </div>
            
            <div class="h-64 flex items-center justify-center border-2 border-dashed border-gray-300 rounded-lg">
                <div class="text-center">
                    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                    </svg>
                    <h4 class="mt-2 text-lg font-medium text-gray-900">Revenue Chart</h4>
                    <p class="text-gray-500">Chart integration would be implemented here</p>
                    <p class="text-sm text-gray-400 mt-1">
                        (Chart.js, D3.js, or similar charting library)
                    </p>
                </div>
            </div>
        </div>

        <!-- Order Status Distribution -->
        <div class="bg-white shadow rounded-lg p-6">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-medium text-gray-900">Order Status Distribution</h3>
                <button on:click="@(() => Model.NavigateToSection("orders"))" 
                        class="text-sm text-indigo-600 hover:text-indigo-500">
                    View all orders â†’
                </button>
            </div>
            
            <div class="space-y-3">
                <div class="flex items-center justify-between">
                    <span class="flex items-center text-sm text-gray-600">
                        <span class="w-3 h-3 bg-yellow-400 rounded-full mr-2"></span>
                        Pending
                    </span>
                    <span class="text-sm font-medium">@Model.DashboardData.Stats.PendingOrders</span>
                </div>
                
                <div class="flex items-center justify-between">
                    <span class="flex items-center text-sm text-gray-600">
                        <span class="w-3 h-3 bg-blue-400 rounded-full mr-2"></span>
                        Processing
                    </span>
                    <span class="text-sm font-medium">@Model.DashboardData.Stats.ProcessingOrders</span>
                </div>
                
                <div class="flex items-center justify-between">
                    <span class="flex items-center text-sm text-gray-600">
                        <span class="w-3 h-3 bg-purple-400 rounded-full mr-2"></span>
                        Shipped
                    </span>
                    <span class="text-sm font-medium">@Model.DashboardData.Stats.ShippedOrders</span>
                </div>
                
                <div class="flex items-center justify-between">
                    <span class="flex items-center text-sm text-gray-600">
                        <span class="w-3 h-3 bg-green-400 rounded-full mr-2"></span>
                        Completed
                    </span>
                    <span class="text-sm font-medium">
                        @(Model.DashboardData.Stats.TotalOrders - Model.DashboardData.Stats.PendingOrders - Model.DashboardData.Stats.ProcessingOrders - Model.DashboardData.Stats.ShippedOrders)
                    </span>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activities and Top Customers -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <!-- Recent Activities -->
        <div class="bg-white shadow rounded-lg">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900">Recent Activities</h3>
            </div>
            <div class="p-6">
                @if (Model.DashboardData.RecentActivities.Any())
                {
                    <div class="flow-root">
                        <ul class="-mb-8">
                            @for (int i = 0; i < Model.DashboardData.RecentActivities.Count; i++)
                            {
                                var activity = Model.DashboardData.RecentActivities[i];
                                <li>
                                    <div class="relative pb-8">
                                        @if (i < Model.DashboardData.RecentActivities.Count - 1)
                                        {
                                            <span class="absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"></span>
                                        }
                                        <div class="relative flex space-x-3">
                                            <div>
                                                <span class="h-8 w-8 rounded-full flex items-center justify-center text-lg">
                                                    @activity.Icon
                                                </span>
                                            </div>
                                            <div class="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4">
                                                <div>
                                                    <p class="text-sm text-gray-900 font-medium">@activity.Title</p>
                                                    <p class="text-sm text-gray-500">@activity.Description</p>
                                                </div>
                                                <div class="text-right text-sm whitespace-nowrap text-gray-500">
                                                    <time>@activity.TimeAgo</time>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                }
                else
                {
                    <div class="text-center py-6">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <h4 class="mt-2 text-lg font-medium text-gray-900">No recent activities</h4>
                        <p class="text-gray-500">Activities will appear here as they happen.</p>
                    </div>
                }
            </div>
        </div>

        <!-- Top Customers -->
        <div class="bg-white shadow rounded-lg">
            <div class="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
                <h3 class="text-lg font-medium text-gray-900">Top Customers</h3>
                <button on:click="@(() => Model.NavigateToSection("customers"))" 
                        class="text-sm text-indigo-600 hover:text-indigo-500">
                    View all â†’
                </button>
            </div>
            <div class="p-6">
                @if (Model.DashboardData.TopCustomers.Any())
                {
                    <div class="space-y-4">
                        @foreach (var customer in Model.DashboardData.TopCustomers)
                        {
                            <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 cursor-pointer"
                                 on:click="@(() => Model.Location($"/Customers/{customer.CustomerId}"))">
                                <div class="flex items-center space-x-3">
                                    <div class="flex-shrink-0">
                                        <div class="h-8 w-8 bg-indigo-500 rounded-full flex items-center justify-center">
                                            <span class="text-white text-sm font-medium">
                                                @customer.CustomerName.Split(' ').Select(n => n.FirstOrDefault()).Take(2).Aggregate("", (a, b) => a + b)
                                            </span>
                                        </div>
                                    </div>
                                    <div>
                                        <p class="text-sm font-medium text-gray-900">@customer.CustomerName</p>
                                        <p class="text-sm text-gray-500">@customer.Email</p>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <p class="text-sm font-medium text-gray-900">@customer.TotalSpent.ToString("C")</p>
                                    <p class="text-sm text-gray-500">@customer.TotalOrders orders</p>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-6">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                        </svg>
                        <h4 class="mt-2 text-lg font-medium text-gray-900">No customers yet</h4>
                        <p class="text-gray-500">Top customers will appear here.</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Quick Actions Section -->
    <div class="bg-white shadow rounded-lg p-6">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Quick Actions</h3>
        <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
            <button on:click="@(() => Model.NavigateToSection("customers"))" 
                    class="flex flex-col items-center p-4 border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500">
                <span class="text-2xl mb-2">ðŸ‘¤</span>
                <span class="text-sm font-medium text-gray-900">Add Customer</span>
            </button>

            <button on:click="@(() => Model.NavigateToSection("products"))" 
                    class="flex flex-col items-center p-4 border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500">
                <span class="text-2xl mb-2">ðŸ“¦</span>
                <span class="text-sm font-medium text-gray-900">Add Product</span>
            </button>

            <button on:click="@(() => Model.NavigateToSection("orders"))" 
                    class="flex flex-col items-center p-4 border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500">
                <span class="text-2xl mb-2">ðŸ›’</span>
                <span class="text-sm font-medium text-gray-900">Create Order</span>
            </button>

            <button on:click="@(() => Model.NavigateToSection("invoices"))" 
                    class="flex flex-col items-center p-4 border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500">
                <span class="text-2xl mb-2">ðŸ“„</span>
                <span class="text-sm font-medium text-gray-900">Create Invoice</span>
            </button>
        </div>
    </div>

    <!-- System Status -->
    <div class="bg-white shadow rounded-lg p-6">
        <div class="flex items-center justify-between mb-4">
            <h3 class="text-lg font-medium text-gray-900">System Status</h3>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                <span class="w-2 h-2 bg-green-400 rounded-full mr-1"></span>
                All systems operational
            </span>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div class="text-center">
                <div class="text-2xl font-bold text-green-600">99.9%</div>
                <div class="text-sm text-gray-500">Uptime</div>
            </div>
            <div class="text-center">
                <div class="text-2xl font-bold text-blue-600">45ms</div>
                <div class="text-sm text-gray-500">Avg Response Time</div>
            </div>
            <div class="text-center">
                <div class="text-2xl font-bold text-purple-600">@Model.LastRefresh.ToString("HH:mm:ss")</div>
                <div class="text-sm text-gray-500">Last Updated</div>
            </div>
        </div>
    </div>

    <!-- Footer Information -->
    <div class="text-center text-sm text-gray-500">
        <p>
            This dashboard showcases the power of Noundry.Hydro ecosystem with real-time updates, 
            reactive components, and seamless data integration.
        </p>
        <p class="mt-1">
            Data automatically refreshes every minute. Manual refresh available using the refresh button.
        </p>
    </div>
</div>